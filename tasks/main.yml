---
# This task file generates detailed debug reports for an Ansible inventory.
# It writes per-host files containing filtered variables and facts for each host,
# and cluster-wide files containing inventory graphs, group listings, and optionally all hostvars.
# Comments and structure are provided to make the role easy to understand and modify.

# Step 1: Create output directories (run once)
- name: Ensure output directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ debug_output_dir }}"
    - "{{ debug_output_dir }}/cluster"
    - "{{ debug_output_dir }}/hosts"
  delegate_to: localhost
  run_once: true

# Step 2: Determine the inventory file being used.
# This uses the first entry from ansible_inventory_sources or falls back to inventory_file/default.
- name: Detect inventory source
  ansible.builtin.set_fact:
    inventory_src: >-
      {{
        (ansible_inventory_sources | default([]) | first)
        | default(inventory_file | default(debug_inventory_file | default('hosts.yml')))
      }}
  run_once: true

# Step 4: Run the ansible-inventory command to capture the full inventory list.
# This command is run on localhost and only once for the whole play.
- name: Run ansible-inventory --list (cluster)
  ansible.builtin.command:
    cmd: ansible-inventory -i {{ inventory_src }} --list --yaml
  register: inventory_list_cmd
  changed_when: false
  delegate_to: localhost
  run_once: true

# Step 5: Run the ansible-inventory command to capture the inventory graph.
- name: Run ansible-inventory --graph (cluster)
  ansible.builtin.command:
    cmd: ansible-inventory -i {{ inventory_src }} --graph
  register: inventory_graph_cmd
  changed_when: false
  delegate_to: localhost
  run_once: true

# -------- PER-HOST SECTION (runs once per host) --------

# Filter variables for the current host to avoid including large or repetitive keys.
# This produces a dictionary (vars_filtered) containing only the keys not present in debug_exclude_keys.
- name: Filter vars for the current host
  ansible.builtin.set_fact:
    vars_filtered: >-
      {{
        hostvars[inventory_hostname]
        | dict2items
        | rejectattr('key', 'in', debug_exclude_keys)
        | list
        | items2dict
      }}

# Compose the per-host report using filtered variables, facts, environment, and metadata.
# The report is formatted with headers for readability.
- name: Compose per-host report
  ansible.builtin.set_fact:
    per_host_report: |
      ====== INVENTORY INFO (HOST) ======
      inventory_hostname: {{ inventory_hostname }}
      inventory_hostname_short: {{ inventory_hostname_short }}
      inventory_dir: {{ inventory_dir | default('N/A') }}
      inventory_file: {{ inventory_file | default('N/A') }}

      ====== GROUP NAMES (HOST) ======
      {{ group_names | to_nice_yaml }}

      ====== VARS (FILTERED - HOST) ======
      {{ vars_filtered | to_nice_yaml }}

      ====== FACTS (HOST) ======
      {{ ansible_facts | default({}) | to_nice_yaml }}

      ====== ENVIRONMENT (task-level, HOST) ======
      {{ environment | default('<undefined>') | to_nice_json }}

      ====== ENVIRONMENT (system, HOST) ======
      {{ ansible_env | default({}) | to_nice_yaml }}

      ====== CONNECTION INFO (HOST) ======
      ansible_connection: {{ ansible_connection | default('N/A') }}
      ansible_host: {{ ansible_host | default('N/A') }}
      ansible_port: {{ ansible_port | default('N/A') }}
      ansible_user: {{ ansible_user | default('N/A') }}

      ====== PLAY INFO (HOST) ======
      playbook_dir: {{ playbook_dir }}
      ansible_play_hosts: {{ ansible_play_hosts | default([]) | to_nice_yaml }}
      ansible_play_batch: {{ ansible_play_batch | default([]) | to_nice_yaml }}
      ansible_play_hosts_all: {{ ansible_play_hosts_all | default([]) | to_nice_yaml }}

      ====== ANSIBLE CONFIG & RUNTIME (RUN) ======
      ansible_config_file: {{ ansible_config_file | default('N/A') }}
      ansible_version: {{ ansible_version.full }}
      ansible_check_mode: {{ ansible_check_mode | default(false) }}
      ansible_diff_mode: {{ ansible_diff_mode | default(false) }}
      ansible_skip_tags: {{ ansible_skip_tags | default([]) | to_nice_yaml }}
      ansible_run_tags: {{ ansible_run_tags | default([]) | to_nice_yaml }}
      ansible_forks: {{ ansible_forks | default('N/A') }}
      ansible_verbosity: {{ ansible_verbosity | default(0) }}
      ansible_limit: {{ ansible_limit | default('N/A') }}

# Write the per-host report into a file under debug_output_dir/hosts.
- name: Write per-host report
  ansible.builtin.copy:
    content: "{{ per_host_report }}"
    dest: "{{ debug_output_dir }}/hosts/{{ inventory_hostname }}.txt"
  delegate_to: localhost

# -------- CLUSTER-WIDE SECTION (run once) --------

# Write the groups dictionary to a YAML file. This provides a clear listing of groups and their hosts.
- name: Write groups map (cluster)
  ansible.builtin.copy:
    content: "{{ groups | to_nice_yaml }}"
    dest: "{{ debug_output_dir }}/cluster/groups.yaml"
  delegate_to: localhost
  run_once: true

# Write the inventory graph from the command to a plain text file.
- name: Write inventory graph (command) - cluster
  ansible.builtin.copy:
    content: "{{ inventory_graph_cmd.stdout }}"
    dest: "{{ debug_output_dir }}/cluster/inventory_graph.txt"
  delegate_to: localhost
  run_once: true

# Write the full inventory list from the command to a YAML file.
- name: Write inventory list (cluster)
  ansible.builtin.copy:
    content: "{{ inventory_list_cmd.stdout }}"
    dest: "{{ debug_output_dir }}/cluster/inventory_list.yaml"
  delegate_to: localhost
  run_once: true

# Optionally write all hostvars to a YAML file. This file may be large and is written only if enabled.
- name: Write HOSTVARS for all hosts (cluster)
  ansible.builtin.copy:
    content: "{{ hostvars | to_nice_yaml }}"
    dest: "{{ debug_output_dir }}/cluster/hostvars_all.yaml"
  when: debug_write_cluster_hostvars | bool
  delegate_to: localhost
  run_once: true

# Write a cluster metadata report with references to generated files.
- name: Write CLUSTER_REPORT (cluster metadata)
  ansible.builtin.copy:
    content: |
      ====== CLUSTER METADATA ======
      inventory_src: {{ inventory_src }}
      ansible_inventory_sources: {{ ansible_inventory_sources | default([]) | to_nice_yaml }}
      ansible_config_file: {{ ansible_config_file | default('N/A') }}
      ansible_version: {{ ansible_version.full }}

      ====== FILES ======
      - {{ debug_output_dir }}/cluster/groups.yaml
      - {{ debug_output_dir }}/cluster/inventory_graph.txt
      - {{ debug_output_dir }}/cluster/inventory_list.yaml
      {% if debug_write_cluster_hostvars | bool %}
      - {{ debug_output_dir }}/cluster/hostvars_all.yaml
      {% endif %}
    dest: "{{ debug_output_dir }}/cluster/CLUSTER_REPORT.txt"
  delegate_to: localhost
  run_once: true